server:
  port: 8080
  servlet:
    context-path: /api/v1

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

  application:
    name: crm-backend-api

  datasource:
    # Use environment variable, but default to localhost for non-Docker runs
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  data:
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}
      username: ${SPRING_REDIS_USERNAME} # Defaults to empty for local Redis
      password: ${SPRING_REDIS_PASSWORD}
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: -1ms
        shutdown-timeout: 2000ms

logging:
  level:
    com.xeno.crm: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    try-it-out-enabled: true
  show-actuator: false

  info:
    title: CRM Backend API
    description: API documentation for the Xeno CRM application.
    version: v1.0.0
app:
  jwt:
    secret: ${JWT_SECRET_SPRINGBOOT}
    expiration-ms: 86400000 # 24 hours
  oauth2:
    redirect-uri: http://localhost:3000/dashboard
  cors:
    allowed-origins:
      - http://localhost:3000
  gemini:
    api:
      key: ${AI_API_KEY}
